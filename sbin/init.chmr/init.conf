# This is the /etc/init.conf file.
# It is read on startup by the chmr-init program, before /etc/rc or
# singleuser shell is executed.
#
# WARNING: You can easily make your system unbootable if you specify
#          wrong values in this file. Make sure you know exactly what you
#          are doing, and always have a boot floppy prepared !
#
# Blank lines and lines beginning with '#' are ignored.
# All keywords can be abbreviated to their shortest unambiguous form.
# ("st s" is the same as "startup_state singleuser").
# Case is ignored in keywords, but retained in string values.
#
#
# Set the debug level high, so that you can see the configuration process
# Note that you also have to edit /etc/syslog.conf so that messages of type
# daemon.debug are written somewhere. Otherwise they go to /dev/null.
#
# This keyword is only available if init was compiled with -DDEBUG .
# Note that it produces *a lot* of noise !
#debug	5
#
#
# You can also include another config file here:
#include "/etc/init.conf2"
#
#
# To which mode the machine boots: "singleuser" or "multiuser"
startup_state	multiuser
#
#
# The command to be executed for a singleuser shell.
# Note that this is specified as "command arg0 arg1", i.e. the first argument
# give here is passed as argv[0] to the command.
singleusershell	"/bin/sh -"
#
# Terminal type for singleusershell
singleuserterm	"pc3"
#
# Device on which the singleusershell is started, relative to /dev.
singleuserdevice	"console"
#
#
# autobootcommand is started to execute /etc/rc if the system is started
# directly to multiuser mode; In all other cases (transition from singleuser
# to multiuser) fastbootcommand isn't started.
autobootcommand	"/bin/sh sh /etc/rc autoboot"
fastbootcommand	"/bin/sh sh /etc/rc"
#
#
# Timeout values, in seconds for shutdown to singleuser mode:
# how long to wait for child processes after sending SIGTERM:
timeout shutdown sigterm	10
# how long to wait after sending SIGKILL:
timeout shutdown sigkill	30
#
#
# If an error occurs (out of memory, fork failed,...) retry the same operation
# after this many seconds (0 disables):
timeout error-retry		300
#
#
# Parameters for a failing getty process:
# check the exit status of the process to see if it is failing:
respawn checkstatus		yes
# if the process terminates within this many seconds, assume it is failing:
respawn checktime		3
## don't check the time the process is alive
#respawn checktime		no
#
#
# *************************************************************
# configuration parameters that are applicable to ALL processes
# *************************************************************
#
# Set an environment variable that is accessible from all processes on this
# system (not very useful, but it was easy to implement 8-)
setenv HOSTTYPE			"386bsd"
#
#
# Configure default resource limits for *all* processes on this system, except
# init itself. Soft limits are quietly truncated to the corresponding
# hard limit. A limit is left alone if it is no specified or specified as
# 'default'.
#
# Cpu time limit; 1:00:00 == 1h == 60m == 3600s == 3600
hardlimit	cputime		unlimited
limit		cputime		unlimited
#
# Maximum file size; 1m == 1024k == 1048576b == 1024
hardlimit	filesize	unlimited
limit		filesize	512m
#
# Maximum size of DATA segment
hardlimit	datasize	32m
limit		datasize	16m
#
# Stack segment...
hardlimit	stacksize	32m
limit		stacksize	512k
#
# Maximum size of a core dump
hardlimit	coredumpsize	unlimited
limit		coredumpsize	0
#
# Maximum use of physical memory per process
hardlimit	memoryuse	default
limit		memoryuse	default
#
# Maximum number of bytes lockable in-core
hardlimit	memorylocked	default
limit		memorylocked	default
#
# Maximum number of processes per user
hardlimit	maxprocesses	64
limit		maxprocesses	40
#
# Maximum number of open files, per process
hardlimit	openfiles	default
limit		openfiles	128
#
#
#
# End of configuration -- set debug level back to 0
#debug 0
